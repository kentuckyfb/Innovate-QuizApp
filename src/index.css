/* src/index.css */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  color-scheme: normal;
  -webkit-color-scheme: normal;
  color-gamut: srgb;
  -webkit-color-gamut: srgb;
}

html,
body,
#root {
  height: 100%;
  width: 100%;
  max-height: 100%;
  max-width: 100%;
  overflow-x: hidden;
  margin: 0;
  padding: 0;
}
body {
  font-family: 'Poppins', sans-serif;
  background-color: var(--purple-bg);
  position: relative;
  -webkit-tap-highlight-color: transparent;
}
body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(
      circle at 20% 20%,
      rgba(251, 192, 45, 0.15),
      transparent 70%
    ),
    radial-gradient(circle at 80% 80%, rgba(251, 192, 45, 0.1), transparent 70%);
  pointer-events: none;
  z-index: -2;
} /* Custom scrollbar */
::-webkit-scrollbar {
  width: 4px;
}
::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 8px;
}
::-webkit-scrollbar-thumb {
  background: #fbc02d;
  border-radius: 8px;
}
::-webkit-scrollbar-thumb:hover {
  background: #c49000;
} /* Button effects */
@keyframes pulse-purple {
  0%,
  100% {
    box-shadow: 0 0 0 0 rgba(251, 192, 45, 0.4);
  }
  50% {
    box-shadow: 0 0 0 8px rgba(251, 192, 45, 0);
  }
}
.animate-pulse-purple {
  animation: pulse-purple 2s infinite;
} /* Loading spinner */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.animate-spin {
  animation: spin 1s linear infinite;
} /* Custom classes */
.gradient-text {
  background: linear-gradient(90deg, #fbc02d, #ffeb3b);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
}
.glass-card {
  background: rgba(255, 255, 255, 0.7);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(251, 192, 45, 0.2);
  border-radius: 16px;
} /* Purple glow */
.purple-glow {
  box-shadow: 0 0 15px rgba(251, 192, 45, 0.5);
}
.purple-glow-hover:hover {
  box-shadow: 0 0 20px rgba(251, 192, 45, 0.6);
} /* Confetti animation */
@keyframes fall {
  to {
    transform: translateY(100vh);
  }
}
@keyframes sway {
  from {
    transform: translateX(-5vw);
  }
  to {
    transform: translateX(5vw);
  }
} /* Fix for sticky hover states on mobile */
@media (hover: hover) {
  .hover\:bg-purple-700:hover {
    background-color: #c49000;
  }
} /* Fix for height issues on mobile browsers */
@supports (-webkit-touch-callout: none) {
  .h-screen {
    height: -webkit-fill-available;
  }
} /* Fix for iOS safari viewport height issues */
.h-screen {
  height: 100vh; /* Fallback */
  height: calc(var(--vh, 1vh) * 100);
} /* Add this script to your index.js or App component to fix iOS height issues */ /*    // First we get the viewport height and we multiple it by 1% to get a value for a vh unit   let vh = window.innerHeight * 0.01;   // Then we set the value in the --vh custom property to the root of the document   document.documentElement.style.setProperty('--vh', `${vh}px`);    // We listen to the resize event   window.addEventListener('resize', () => {     // We execute the same script as before     let vh = window.innerHeight * 0.01;     document.documentElement.style.setProperty('--vh', `${vh}px`);   }); */

@font-face {
  font-family: 'Arame';
  src: url('./assets/fonts/Arame-Bold.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}
